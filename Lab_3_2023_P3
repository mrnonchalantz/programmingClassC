/*
Problem 1
Write a program that consists of the following new structure;

Structure Name: Student
Content of the structure: student ID, student name, nickname

The program should ask the user to enter the details. 

The program should be able to store maximum 5 students’ data at a time. 
Finally, the program will display the details entered by the user correctly.

[Hint: array]




Problem 2
Based on Problem 1, write a program that consists of the following new structure;

Structure Name: Course
Content of the structure: course code, course name, lecturer name

The program should ask the user to enter the details of each of the course. 
The program should be able to store maximum 2 courses’ data at a time. 
Finally, the program will display the details entered by the user correctly. 

[Hint: array]




Problem 3
Based on Problem 1 and 2 above, 

modify the program so that it will display a menu for the user to choose either to;

Add new students Display student list 
Add new course Display Course Offered

The user can choose to safely exit/terminate the program
*/
    
#include <iostream>
#include <string>

using namespace std;

//Define Student structure
struct Student {
    int id;
    string name;
    string nickname;
};

// Define the Course structure
struct Course {
    string code;
    string name;
    string lecturer;
};

int main() {
    // Declare array of Course & Student structures
    Student students[5];
    Course courses[2];

    int choice = 0;

    while (choice != 5) {
        // Display the menu and ask the user for their choice
        cout << "Menu" << endl;
        cout << "1. Add new students" << endl;
        cout << "2. Display student list" << endl;
        cout << "3. Add new course" << endl;
        cout << "4. Display course list" << endl;
        cout << "5. Exit" << endl << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                //Add new student
                for (int i = 0; i < 5; i++) 
                {
                    cout << "Enter details for student " << i + 1 << endl;
                    cout << "ID: ";
                    cin >> students[i].id;
                    cin.ignore(); // ignore newline character from previous input
                    cout << "Name: ";
                    getline(cin, students[i].name);
                    cout << "Nickname: ";
                    getline(cin, students[i].nickname);
                    cout << endl;
                }
                break;
                
            case 2:
                //Display student list
                for (int i = 0; i < 5; i++) 
                {
                    cout << "Student " << i + 1 << endl;
                    cout << "ID: " << students[i].id << endl;
                    cout << "Name: " << students[i].name << endl;
                    cout << "Nickname: " << students[i].nickname << endl;
                    cout << endl;
                }
                break;
            
            case 3:
                // Add new course
                for (int i = 0; i < 2; i++) {
                    cout << "Enter the details of course #" << i+1 << ":" << endl;
                    cout << "Code Course: ";
                    cin >> courses[i].code;
                    cout << "Name Course: ";
                    cin >> courses[i].name;
                    cout << "Lecturer: ";
                    cin >> courses[i].lecturer;
                    cout << endl;
                }
                break;
                
            case 4:
                // Display course offered
                for (int i = 0; i < 2; i++) {
                    cout << "Details of course #" << i+1 << endl;
                    cout << "Code Course: " << courses[i].code << endl;
                    cout << "Name Course: " << courses[i].name << endl;
                    cout << "Lecturer: " << courses[i].lecturer << endl;
                    cout << endl;
                }
                break;
                
            case 5:
                // Exit the program
                cout << "Exiting the program..." << endl;
                break;
                
            default:
                // Invalid choice
                cout << "Invalid choice. Please try again." << endl << endl;
        }
    }

    return 0;
}


