/*Write a complete C++ program with the two alternate functions specified below, 
each of which simply triples the variable count defined in main. 
Then compare and contrast the three approaches. 
These three functions are:

a) function tripleByValue ( ) that passes a copy of count by value, 
triples the copy and returns the new value (function call by value) and

b) function tripleByReference ( ) that passes count by reference via a reference parameter 
and triples the original value of count using pointer (function call by reference).

c) function tripleByAlias ( ) that passes count by reference via a reference parameter 
and triples the original value of count through its alias (function call by reference).
*/

#include <iostream>

using namespace std;

// Function to triple the value of a variable passed by value
int tripleByValue(int count) {
    count *= 3;
    return count;
}

// Function to triple the value of a variable passed by reference
void tripleByReference(int &count) {
    count *= 3;
}

// Function to triple the value of a variable passed by alias (reference parameter)
void tripleByAlias(int &alias) {
    alias *= 3;
}

int main() {
    int count = 10;

    // Tripling the value of count using function call by value
    int result1 = tripleByValue(count);
    cout << "Using function call by value, count is now " << count << " and result1 is " << result1 << endl;

    // Tripling the value of count using function call by reference
    tripleByReference(count);
    cout << "Using function call by reference, count is now " << count << endl;

    // Tripling the value of count using function call by reference (alias)
    tripleByAlias(count);
    cout << "Using function call by reference (alias), count is now " << count << endl;

    return 0;
}
